name: "CI Build"

on:
  # Runs on pull requests targeting the default branch
  pull_request:
    paths-ignore:
      - '**.md'
      - '.gitignore'

jobs:
  continuous-integration:
    name: "Continuous Integration Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        # The `npm ci` command is safe and can only install dependencies depending on an existing package-lock.json
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests (test)
        run: npm run test
      - name: Build with Vite (build)
        run: npm run build
      # - name: Check style with ESLint (lint)
      #   run: npm run lint
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Save PR number to file for subsequently Sonar Analysis
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: echo $PR_NUMBER > PR_NUMBER.txt
      - name: Archive PR number for subsequently Sonar Analysis
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: PR_NUMBER
          path: PR_NUMBER.txt

  check-branches:
    name: "Check Pull Request Conditions"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check PR branches
        run: |
          if [ "${{ github.head_ref }}" == "main" ] && [ "${{ github.base_ref }}" == "main" ]; then
            echo "Pull Requests to main branch are only allowed from developer branches that are not named <main>."
            exit 1
          fi
